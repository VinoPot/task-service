definitions:
  models.Task:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple task management service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Task Service API
  version: 1.0.0
paths:
  /tasks:
    get:
      description: get a list of tasks with optional filtering by done status
      operationId: get-tasks
      parameters:
      - description: Filter by completion status
        in: query
        name: done
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      summary: Get all tasks
    post:
      consumes:
      - application/json
      description: create a new task with title and description
      operationId: create-task
      parameters:
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new task
  /tasks/{id}:
    delete:
      description: delete task by ID
      operationId: delete-task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a task
    get:
      description: get task by ID
      operationId: get-task-by-id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get task by ID
    put:
      consumes:
      - application/json
      description: update task by ID
      operationId: update-task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing task
schemes:
- http
swagger: "2.0"
